/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as LayoutImport } from "./routes/_layout";
import { Route as homeIndexImport } from "./routes/(home)/index";
import { Route as AboutAboutImport } from "./routes/about/about";

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: "/_layout",
  getParentRoute: () => rootRoute,
} as any);

const homeIndexRoute = homeIndexImport.update({
  id: "/(home)/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const AboutAboutRoute = AboutAboutImport.update({
  id: "/about/about",
  path: "/about/about",
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/_layout": {
      id: "/_layout";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof LayoutImport;
      parentRoute: typeof rootRoute;
    };
    "/about/about": {
      id: "/about/about";
      path: "/about/about";
      fullPath: "/about/about";
      preLoaderRoute: typeof AboutAboutImport;
      parentRoute: typeof rootRoute;
    };
    "/(home)/": {
      id: "/(home)/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof homeIndexImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "": typeof LayoutRoute;
  "/about/about": typeof AboutAboutRoute;
  "/": typeof homeIndexRoute;
}

export interface FileRoutesByTo {
  "": typeof LayoutRoute;
  "/about/about": typeof AboutAboutRoute;
  "/": typeof homeIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/_layout": typeof LayoutRoute;
  "/about/about": typeof AboutAboutRoute;
  "/(home)/": typeof homeIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "" | "/about/about" | "/";
  fileRoutesByTo: FileRoutesByTo;
  to: "" | "/about/about" | "/";
  id: "__root__" | "/_layout" | "/about/about" | "/(home)/";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRoute;
  AboutAboutRoute: typeof AboutAboutRoute;
  homeIndexRoute: typeof homeIndexRoute;
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRoute,
  AboutAboutRoute: AboutAboutRoute,
  homeIndexRoute: homeIndexRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/about/about",
        "/(home)/"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx"
    },
    "/about/about": {
      "filePath": "about/about.tsx"
    },
    "/(home)/": {
      "filePath": "(home)/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
